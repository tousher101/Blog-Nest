
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User{
  id  Int   @id @default(autoincrement())
  name  String  
  email String  @unique
  posts      Post[] 
  comments Comment[]   
  following Follow[] @relation("Followers")
  follower Follow[] @relation("Followings")
  password String
  photos  String?
  publicId  String?
  phone String?
  address String?
  gender String?
  bio String?
  interested String?
  role  Role  @default(USER)
  isVerified  Boolean @default(false)
  authorRequest Boolean @default(false)
  isPremium Boolean @default(false)
  createdAt DateTime  @default(now())
   updatedAt   DateTime @updatedAt
}
enum Role{
  ADMIN @map("admin")
  AUTHOR @map("author")
  USER @map("user")
}

model Post{
  id  Int @id @default(autoincrement())
  title   String
  description String
  content String
  photos  String?
  publicId  String?
  comments Comment[] 
  likeCount Int @default(0)  
  dislikeCount Int @default(0)
  viewCount Int @default(0)
  createdAt DateTime  @default(now())
  visibility  Visibility @default(PRIVATE)
  author  User  @relation(fields:[authorId], references:[id])
   updatedAt   DateTime @updatedAt
  authorId  Int

}

enum Visibility{
    PUBLIC
    PRIVATE
  }

model Comment {
  id Int @id @default(autoincrement())
  comment String
  createdAt DateTime @default(now())
  user User @relation(fields:[userId], references:[id])
  userId Int
  post Post @relation(fields:[postId], references:[id])
  postId Int
}

model Follow {
  id  Int @id @default(autoincrement())
  follower User @relation("Followings", fields:[followerId], references:[id])
  followerId Int
  following User @relation("Followers", fields:[followingId],references:[id])
  followingId Int
  createdAt DateTime @default(now())
  @@unique([followerId, followingId])
}
